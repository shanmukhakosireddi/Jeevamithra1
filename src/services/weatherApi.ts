// Weather API service using Google PaLM API for weather and farming advice
const API_KEY = 'AIzaSyDXf4W88CpdbzRW_NSmR4d5wNWU2UThJ6Y';
const PALM_API_URL = 'https://generativelanguage.googleapis.com/v1beta2/models/text-bison-001:generateText';

export interface WeatherData {
  location: string;
  temperature: number;
  rainProbability: number;
  humidity: number;
  windSpeed: number;
  timeOfDay: string;
  weatherEmoji: string;
  farmingAdvice: string;
  fiveDayForecast: DayForecast[];
}

export interface DayForecast {
  day: string;
  emoji: string;
  temperature: number;
  advice: string;
}

interface PaLMResponse {
  candidates: {
    output: string;
  }[];
}

export const fetchWeatherAndFarmingAdvice = async (
  location: string = 'Hyderabad, India',
  teluguMode: boolean = false
): Promise<WeatherData> => {
  try {
    const prompt = teluguMode 
      ? `‡∞Æ‡±Ä‡∞∞‡±Å ‡∞≠‡∞æ‡∞∞‡∞§‡±Ä‡∞Ø ‡∞∞‡±à‡∞§‡±Å‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞∂‡∞ø‡∞ï‡±ç‡∞∑‡∞£ ‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞® ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞Ö‡∞Ç‡∞ö‡∞®‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å.

${location} ‡∞≤‡±ã‡∞®‡∞ø ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø:
- ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø
- ‡∞µ‡∞∞‡±ç‡∞∑‡∞™‡∞æ‡∞§‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§
- ‡∞™‡∞Ç‡∞ü ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞°‡∞Ç, ‡∞é‡∞∞‡±Å‡∞µ‡±Å‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∞‡∞ï‡±ç‡∞∑‡∞£‡∞™‡±à ‡∞∏‡∞≤‡∞π‡∞æ

‡∞∏‡∞∞‡∞≥‡∞Æ‡±à‡∞®, ‡∞∞‡±à‡∞§‡±Å-‡∞∏‡±ç‡∞®‡±á‡∞π‡∞™‡±Ç‡∞∞‡±ç‡∞µ‡∞ï ‡∞´‡∞æ‡∞∞‡±ç‡∞Æ‡∞æ‡∞ü‡±ç‚Äå‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.

‡∞à ‡∞´‡∞æ‡∞∞‡±ç‡∞Æ‡∞æ‡∞ü‡±ç‚Äå‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞§‡∞ø‡∞∏‡±ç‡∞™‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø:
‡∞∏‡±ç‡∞•‡∞æ‡∞®‡∞Ç: ${location}
‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§: [‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø]¬∞C
‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç ‡∞∏‡∞Ç‡∞≠‡∞æ‡∞µ‡±ç‡∞Ø‡∞§: [‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø]%
‡∞§‡±á‡∞Æ: [‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø]%
‡∞ó‡∞æ‡∞≤‡∞ø ‡∞µ‡±á‡∞ó‡∞Ç: [‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø] km/h
‡∞¶‡∞ø‡∞®‡∞Ç‡∞≤‡±ã ‡∞≠‡∞æ‡∞ó‡∞Ç: [‡∞â‡∞¶‡∞Ø‡∞Ç/‡∞Æ‡∞ß‡±ç‡∞Ø‡∞æ‡∞π‡±ç‡∞®‡∞Ç/‡∞∏‡∞æ‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞Ç/‡∞∞‡∞æ‡∞§‡±ç‡∞∞‡∞ø]
‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞é‡∞Æ‡±ã‡∞ú‡±Ä: [‚òÄÔ∏è/‚õÖ/üåß/‚õà/üí® ‡∞≤‡±ã ‡∞í‡∞ï‡∞ü‡∞ø]
‡∞∞‡±à‡∞§‡±Å‡∞≤ ‡∞∏‡∞≤‡∞π‡∞æ: [‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞∏‡∞∞‡∞≥‡∞Æ‡±à‡∞® ‡∞∏‡∞≤‡∞π‡∞æ - ‡∞é‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞æ‡∞≤‡∞ø, ‡∞ï‡±Ä‡∞ü‡∞ï‡∞®‡∞æ‡∞∂‡∞ï‡∞æ‡∞≤‡±Å ‡∞µ‡∞æ‡∞°‡∞æ‡∞≤‡∞ø, ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å ‡∞µ‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡±ã‡∞§ ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø, ‡∞≠‡∞¶‡±ç‡∞∞‡∞§ ‡∞≤‡±á‡∞¶‡∞æ ‡∞π‡±à‡∞°‡±ç‡∞∞‡±á‡∞∑‡∞®‡±ç ‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ‡∞≤‡±Å]

5-‡∞∞‡±ã‡∞ú‡±Å‡∞≤ ‡∞Ö‡∞Ç‡∞ö‡∞®‡∞æ:
‡∞∏‡±ã‡∞Æ‡∞µ‡∞æ‡∞∞‡∞Ç: [‡∞é‡∞Æ‡±ã‡∞ú‡±Ä] [‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§]¬∞C - [‡∞í‡∞ï ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞∏‡∞≤‡∞π‡∞æ]
‡∞Æ‡∞Ç‡∞ó‡∞≥‡∞µ‡∞æ‡∞∞‡∞Ç: [‡∞é‡∞Æ‡±ã‡∞ú‡±Ä] [‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§]¬∞C - [‡∞í‡∞ï ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞∏‡∞≤‡∞π‡∞æ]
‡∞¨‡±Å‡∞ß‡∞µ‡∞æ‡∞∞‡∞Ç: [‡∞é‡∞Æ‡±ã‡∞ú‡±Ä] [‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§]¬∞C - [‡∞í‡∞ï ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞∏‡∞≤‡∞π‡∞æ]
‡∞ó‡±Å‡∞∞‡±Å‡∞µ‡∞æ‡∞∞‡∞Ç: [‡∞é‡∞Æ‡±ã‡∞ú‡±Ä] [‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§]¬∞C - [‡∞í‡∞ï ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞∏‡∞≤‡∞π‡∞æ]
‡∞∂‡±Å‡∞ï‡±ç‡∞∞‡∞µ‡∞æ‡∞∞‡∞Ç: [‡∞é‡∞Æ‡±ã‡∞ú‡±Ä] [‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§]¬∞C - [‡∞í‡∞ï ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç‡∞≤‡±ã ‡∞∏‡∞≤‡∞π‡∞æ]`
      : `You are a weather forecasting assistant trained for Indian farmers.

Use the current user location (auto-fetched) to generate:
- Weather condition
- Rainfall and temperature
- Advice on crop watering, fertilization, and protection

Display in simple, farmer-friendly format.

Respond in this format:
Location: ${location}
Temperature: [number]¬∞C
Rain Probability: [number]%
Humidity: [number]%
Wind Speed: [number] km/h
Time of Day: [Morning/Afternoon/Evening/Night]
Weather Emoji: [one of ‚òÄÔ∏è/‚õÖ/üåß/‚õà/üí®]
Farming Advice: [Simple advice based on weather - when to water crops, pesticide usage, sowing or harvesting suggestions, safety or hydration tips]

5-Day Forecast:
Monday: [emoji] [temp]¬∞C - [one-line advice]
Tuesday: [emoji] [temp]¬∞C - [one-line advice]
Wednesday: [emoji] [temp]¬∞C - [one-line advice]
Thursday: [emoji] [temp]¬∞C - [one-line advice]
Friday: [emoji] [temp]¬∞C - [one-line advice]`;

    const response = await fetch(`${PALM_API_URL}?key=${API_KEY}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        prompt: {
          text: prompt
        },
        temperature: 0.7,
        candidateCount: 1
      }),
    });

    if (!response.ok) {
      throw new Error(`Weather API Error: ${response.status} - ${response.statusText}`);
    }

    const data: PaLMResponse = await response.json();
    
    if (!data.candidates || data.candidates.length === 0) {
      throw new Error('No weather response from AI');
    }

    const weatherText = data.candidates[0].output;
    
    // Parse the response
    const lines = weatherText.split('\n').filter(line => line.trim());
    const weatherData: Partial<WeatherData> = {
      location: location,
      fiveDayForecast: []
    };

    for (const line of lines) {
      const trimmedLine = line.trim();
      
      if (trimmedLine.includes('‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§:') || trimmedLine.includes('Temperature:')) {
        const tempMatch = trimmedLine.match(/(\d+)¬∞C/);
        if (tempMatch) weatherData.temperature = parseInt(tempMatch[1]);
      } else if (trimmedLine.includes('‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç ‡∞∏‡∞Ç‡∞≠‡∞æ‡∞µ‡±ç‡∞Ø‡∞§:') || trimmedLine.includes('Rain Probability:')) {
        const rainMatch = trimmedLine.match(/(\d+)%/);
        if (rainMatch) weatherData.rainProbability = parseInt(rainMatch[1]);
      } else if (trimmedLine.includes('‡∞§‡±á‡∞Æ:') || trimmedLine.includes('Humidity:')) {
        const humidityMatch = trimmedLine.match(/(\d+)%/);
        if (humidityMatch) weatherData.humidity = parseInt(humidityMatch[1]);
      } else if (trimmedLine.includes('‡∞ó‡∞æ‡∞≤‡∞ø ‡∞µ‡±á‡∞ó‡∞Ç:') || trimmedLine.includes('Wind Speed:')) {
        const windMatch = trimmedLine.match(/(\d+)/);
        if (windMatch) weatherData.windSpeed = parseInt(windMatch[1]);
      } else if (trimmedLine.includes('‡∞¶‡∞ø‡∞®‡∞Ç‡∞≤‡±ã ‡∞≠‡∞æ‡∞ó‡∞Ç:') || trimmedLine.includes('Time of Day:')) {
        weatherData.timeOfDay = trimmedLine.split(':')[1]?.trim() || 'Morning';
      } else if (trimmedLine.includes('‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞é‡∞Æ‡±ã‡∞ú‡±Ä:') || trimmedLine.includes('Weather Emoji:')) {
        const emojiMatch = trimmedLine.match(/[‚òÄÔ∏è‚õÖüåß‚õàüí®]/);
        weatherData.weatherEmoji = emojiMatch ? emojiMatch[0] : '‚òÄÔ∏è';
      } else if (trimmedLine.includes('‡∞∞‡±à‡∞§‡±Å‡∞≤ ‡∞∏‡∞≤‡∞π‡∞æ:') || trimmedLine.includes('Farming Advice:')) {
        weatherData.farmingAdvice = trimmedLine.split(':').slice(1).join(':').trim();
      } else if (trimmedLine.match(/(‡∞∏‡±ã‡∞Æ‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞Æ‡∞Ç‡∞ó‡∞≥‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞¨‡±Å‡∞ß‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞ó‡±Å‡∞∞‡±Å‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞∂‡±Å‡∞ï‡±ç‡∞∞‡∞µ‡∞æ‡∞∞‡∞Ç|Monday|Tuesday|Wednesday|Thursday|Friday):/)) {
        // Parse forecast days
        const dayMatch = trimmedLine.match(/(‡∞∏‡±ã‡∞Æ‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞Æ‡∞Ç‡∞ó‡∞≥‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞¨‡±Å‡∞ß‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞ó‡±Å‡∞∞‡±Å‡∞µ‡∞æ‡∞∞‡∞Ç|‡∞∂‡±Å‡∞ï‡±ç‡∞∞‡∞µ‡∞æ‡∞∞‡∞Ç|Monday|Tuesday|Wednesday|Thursday|Friday):\s*([‚òÄÔ∏è‚õÖüåß‚õàüí®])\s*(\d+)¬∞C\s*-\s*(.+)/);
        if (dayMatch) {
          weatherData.fiveDayForecast!.push({
            day: dayMatch[1],
            emoji: dayMatch[2],
            temperature: parseInt(dayMatch[3]),
            advice: dayMatch[4].trim()
          });
        }
      }
    }

    // Provide fallback values
    return {
      location: weatherData.location || location,
      temperature: weatherData.temperature || 28,
      rainProbability: weatherData.rainProbability || 20,
      humidity: weatherData.humidity || 65,
      windSpeed: weatherData.windSpeed || 12,
      timeOfDay: weatherData.timeOfDay || 'Morning',
      weatherEmoji: weatherData.weatherEmoji || '‚òÄÔ∏è',
      farmingAdvice: weatherData.farmingAdvice || (teluguMode ? '‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞æ‡∞®‡∞ø‡∞ï‡∞ø' : 'Good weather for farming'),
      fiveDayForecast: weatherData.fiveDayForecast!.length > 0 ? weatherData.fiveDayForecast! : [
        { day: teluguMode ? '‡∞∏‡±ã‡∞Æ‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Monday', emoji: '‚òÄÔ∏è', temperature: 30, advice: teluguMode ? '‡∞â‡∞¶‡∞Ø‡∞Ç ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞Ç‡∞°‡∞ø' : 'Water early morning' },
        { day: teluguMode ? '‡∞Æ‡∞Ç‡∞ó‡∞≥‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Tuesday', emoji: '‚õÖ', temperature: 28, advice: teluguMode ? '‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞∞‡±ã‡∞ú‡±Å' : 'Good day for farming' },
        { day: teluguMode ? '‡∞¨‡±Å‡∞ß‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Wednesday', emoji: 'üåß', temperature: 25, advice: teluguMode ? '‡∞∏‡±ç‡∞™‡±ç‡∞∞‡±á ‡∞ö‡±á‡∞Ø‡∞µ‡∞¶‡±ç‡∞¶‡±Å' : 'Don\'t spray today' },
        { day: teluguMode ? '‡∞ó‡±Å‡∞∞‡±Å‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Thursday', emoji: '‚òÄÔ∏è', temperature: 32, advice: teluguMode ? '‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞Ç‡∞°‡∞ø' : 'Water more today' },
        { day: teluguMode ? '‡∞∂‡±Å‡∞ï‡±ç‡∞∞‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Friday', emoji: '‚õÖ', temperature: 29, advice: teluguMode ? '‡∞ï‡±ã‡∞§ ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å' : 'Good for harvesting' }
      ]
    };

  } catch (error) {
    console.error('Weather fetch error:', error);
    
    // Return fallback weather data
    return {
      location: location,
      temperature: 28,
      rainProbability: 20,
      humidity: 65,
      windSpeed: 12,
      timeOfDay: 'Morning',
      weatherEmoji: '‚òÄÔ∏è',
      farmingAdvice: teluguMode 
        ? '‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£ ‡∞°‡±á‡∞ü‡∞æ ‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã ‡∞µ‡∞ø‡∞´‡∞≤‡∞Æ‡±à‡∞Ç‡∞¶‡∞ø. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞Æ‡∞≥‡±ç‡∞≤‡±Ä ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.'
        : 'Failed to load weather data. Please try again.',
      fiveDayForecast: [
        { day: teluguMode ? '‡∞∏‡±ã‡∞Æ‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Monday', emoji: '‚òÄÔ∏è', temperature: 30, advice: teluguMode ? '‡∞â‡∞¶‡∞Ø‡∞Ç ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞Ç‡∞°‡∞ø' : 'Water early morning' },
        { day: teluguMode ? '‡∞Æ‡∞Ç‡∞ó‡∞≥‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Tuesday', emoji: '‚õÖ', temperature: 28, advice: teluguMode ? '‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞∞‡±ã‡∞ú‡±Å' : 'Good day for farming' },
        { day: teluguMode ? '‡∞¨‡±Å‡∞ß‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Wednesday', emoji: 'üåß', temperature: 25, advice: teluguMode ? '‡∞∏‡±ç‡∞™‡±ç‡∞∞‡±á ‡∞ö‡±á‡∞Ø‡∞µ‡∞¶‡±ç‡∞¶‡±Å' : 'Don\'t spray today' },
        { day: teluguMode ? '‡∞ó‡±Å‡∞∞‡±Å‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Thursday', emoji: '‚òÄÔ∏è', temperature: 32, advice: teluguMode ? '‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±ã‡∞Ø‡∞Ç‡∞°‡∞ø' : 'Water more today' },
        { day: teluguMode ? '‡∞∂‡±Å‡∞ï‡±ç‡∞∞‡∞µ‡∞æ‡∞∞‡∞Ç' : 'Friday', emoji: '‚õÖ', temperature: 29, advice: teluguMode ? '‡∞ï‡±ã‡∞§ ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å' : 'Good for harvesting' }
      ]
    };
  }
};